# Generated by Django 4.1 on 2022-10-16 18:23

from django.db import migrations
from django.db.models import Q

database_management_systems = [
    {
        "name": "Microsoft SQL Server",
        "codename": "sqlserver",
        "versions": [
            "Express 2019"
        ]
    },
    {
        "name": "PostgresQL",
        "codename": "postgres",
        "versions": [
            "14.0"
        ]
    },
    {
        "name": "MySQL",
        "codename": "mysql",
        "versions": [
            "12.0"
        ]
    }
]

def create_default_dbms_versions(apps, schema_editor):
    DatabaseManagementSystem = apps.get_model("ferdolt", "DatabaseManagementSystem")
    DatabaseManagementSystemVersion = apps.get_model("ferdolt", "DatabaseManagementSystemVersion")

    for dbms_item in database_management_systems:
        query = DatabaseManagementSystem.objects.filter( Q(name=dbms_item['name']) | Q(codename=dbms_item["codename"]) )
        
        if not query.exists():
            dbms = DatabaseManagementSystem.objects.create(name=dbms_item["name"], codename=dbms_item["codename"])
        else:
            dbms = query.first()

        for version in dbms_item["versions"]:
            if DatabaseManagementSystemVersion.objects.filter( dbms=dbms, version_number=version ):
                DatabaseManagementSystemVersion.objects.create(version_number=version, dbms=dbms)
            

class Migration(migrations.Migration):

    dependencies = [
        ('ferdolt', '0006_databasemanagementsystem_codename'),
    ]

    operations = [
        migrations.RunPython(create_default_dbms_versions, 
        reverse_code=migrations.RunPython.noop)
    ]
