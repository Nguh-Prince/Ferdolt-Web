# Generated by Django 4.1 on 2022-09-26 10:52

from django.db import migrations, models
import django.db.models.deletion
import groups.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('flux', '0001_initial'),
        ('ferdolt', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=groups.models.generate_unique_group_name, max_length=50, unique=True)),
                ('slug', models.CharField(max_length=50)),
                ('fernet_key', models.TextField(default=groups.models.generate_unique_fernet_key, null=True, unique=True)),
                ('create_missing_objects_from_sources', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='GroupColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('is_required', models.BooleanField(default=False)),
                ('data_type', models.CharField(choices=[('datetime', 'Datetime'), ('date', 'Date'), ('int', 'Integer'), ('float', 'Float'), ('double', 'Double'), ('char', 'Character')], max_length=50)),
                ('is_nullable', models.BooleanField(default=True)),
                ('character_maximum_length', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GroupDatabase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_write', models.BooleanField(default=True)),
                ('can_read', models.BooleanField(default=True)),
                ('extraction_frequency', models.BigIntegerField(null=True)),
                ('synchronization_frequency', models.BigIntegerField(null=True)),
                ('database', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ferdolt.database')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='groups.group')),
            ],
            options={
                'verbose_name': 'Group database',
                'verbose_name_plural': 'Group databases',
                'unique_together': {('database', 'group')},
            },
        ),
        migrations.CreateModel(
            name='GroupTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tables', to='groups.group')),
            ],
            options={
                'verbose_name': 'Group table',
                'verbose_name_plural': 'Group tables',
                'unique_together': {('group', 'name')},
            },
        ),
        migrations.CreateModel(
            name='GroupTableTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='groups.grouptable')),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ferdolt.table')),
            ],
        ),
        migrations.CreateModel(
            name='GroupExtraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flux.extraction')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='groups.group')),
                ('source_database', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='groups.groupdatabase')),
            ],
        ),
        migrations.CreateModel(
            name='GroupColumnConstraint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_unique', models.BooleanField(default=False)),
                ('is_foreign_key', models.BooleanField(default=False)),
                ('is_primary_key', models.BooleanField(default=False)),
                ('column', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='groups.groupcolumn')),
                ('references', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='references', to='groups.groupcolumn')),
            ],
        ),
        migrations.CreateModel(
            name='GroupColumnColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ferdolt.column')),
                ('group_column', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='groups.groupcolumn')),
            ],
        ),
        migrations.AddField(
            model_name='groupcolumn',
            name='group_table',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='columns', to='groups.grouptable'),
        ),
        migrations.CreateModel(
            name='GroupDatabaseSynchronization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_applied', models.BooleanField(default=False)),
                ('time_applied', models.DateTimeField(null=True)),
                ('extraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='groups.groupextraction')),
                ('group_database', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='groups.groupdatabase')),
            ],
            options={
                'unique_together': {('group_database', 'extraction')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='groupcolumn',
            unique_together={('group_table', 'name')},
        ),
    ]
