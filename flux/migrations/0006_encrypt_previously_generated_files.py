# Generated by Django 4.1 on 2022-09-01 10:12
import logging
from cryptography.fernet import Fernet

from django.db import migrations

from ferdolt_web.settings import FERNET_KEY

def encrypt_previously_generated_files(apps, schema_editor):
    File = apps.get_model("flux", "File")

    for file in File.objects.all():
        content = ''
        file_path = file.file.path
        logging.info(f"Encrypting the file found at: {file_path}")

        try:
            with open( file_path ) as _:
                content = _.read()
            
            f = Fernet(FERNET_KEY)

            content = f.encrypt( bytes(content, 'utf-8') )

            with open( file_path, "w" ) as _:
                _.write( content.decode('utf-8') )

        except FileNotFoundError as e:
            logging.error(f"Error opening {file_path}. Exception: {e}")


class Migration(migrations.Migration):

    dependencies = [
        ('flux', '0005_synchronizationdatabase'),
    ]

    operations = [
        migrations.RunPython(encrypt_previously_generated_files, 
        reverse_code=migrations.RunPython.noop)
    ]
